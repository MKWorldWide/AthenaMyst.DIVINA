[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "divina"
version = "0.1.0"
description = "AthenaMyst:Divina - FX Signal Engine"
authors = [
    {name = "AthenaMyst Team", email = "contact@athenamyst.com"}
]
license = {text = "Proprietary"}
requires-python = ">=3.9"
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "pydantic>=1.9.0",
    "python-dotenv>=0.19.0",
    "requests>=2.26.0",
    "aiohttp>=3.8.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "loguru>=0.5.3",
    "pytest>=6.2.5",
    "pytest-asyncio>=0.15.1",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.1",
    "pandas-ta>=0.3.14",
    "python-dateutil>=2.8.2",
    "pytz>=2021.3",
    "pydantic[email]>=1.9.0",
    "pydantic-settings>=2.0.0",
    "prometheus-client>=0.14.1",
    "psutil>=5.9.0",
    "opentelemetry-api>=1.12.0",
    "opentelemetry-sdk>=1.12.0",
    "opentelemetry-instrumentation-aiohttp-client>=0.31b0",
    "opentelemetry-instrumentation-fastapi>=0.31b0",
    "opentelemetry-instrumentation-requests>=0.31b0",
    "opentelemetry-exporter-otlp-proto-http>=1.12.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=0.910",
    "black>=22.3.0",
    "ruff>=0.0.270",
    "pre-commit>=2.15.0",
    "pytest>=6.2.5",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.1",
    "pytest-asyncio>=0.15.1",
    "pandas-stubs>=1.2.0",
    "types-python-dateutil>=2.8.0",
    "types-requests>=2.26.0",
    "types-pytz>=2021.3.0",
    "types-PyYAML>=6.0.0",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
# Enable all error codes
extend-select = ["E", "W", "F", "I"]
# Disable specific error codes
ignore = [
    "E203",  # Whitespace before ':' (conflicts with Black)
    "E501",  # Line too long (handled by Black)
    "I001",  # Unsorted imports (handled by isort)
    "I002",  # Missing required imports (handled by isort)
]
# Set the maximum line length
target-version = "py39"
line-length = 100

[tool.ruff.per-file-ignores]
# Ignore import sorting in __init__.py files
"__init__.py" = ["I"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_context = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "pandas",
    "numpy",
    "pydantic",
    "fastapi",
    "aiohttp",
    "uvicorn",
    "pytest",
    "pytest_asyncio",
    "pytest_mock",
    "pytest_cov",
    "loguru",
    "python_dotenv",
    "requests",
    "pandas_ta",
    "prometheus_client",
    "psutil",
    "opentelemetry",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=divina --cov-report=term-missing --cov-report=xml"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["divina"]
omit = [
    "**/__init__.py",
    "**/tests/**",
    "**/test_*.py",
    "**/setup.py",
    "**/conftest.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true

[project.scripts]
divina = "divina.cli:main"
