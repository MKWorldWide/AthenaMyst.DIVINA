name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # Add any required services (e.g., Redis, database) here
      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: >-
      #     --health-cmd "redis-cli ping"
      #     --health-interval 10s
      #     --health-timeout 5s
      #     --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      env:
        NODE_ENV: development
    
    - name: Lint
      run: npx eslint . --ext .ts --fix
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        # Add any required test environment variables here
        # OANDA_ACCOUNT_ID: ${{ secrets.OANDA_ACCOUNT_ID }}
        # OANDA_API_KEY: ${{ secrets.OANDA_API_KEY }}
        # OANDA_ENV: practice
    
    - name: Build
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  # Uncomment and configure deployment steps when ready
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '18.x'
    
  #   - name: Install dependencies
  #     run: npm ci --production
    
  #   - name: Deploy to production
  #     run: npm run deploy
  #     env:
  #       NODE_ENV: production
  #       # Add production environment variables here
  #       OANDA_ACCOUNT_ID: ${{ secrets.PROD_OANDA_ACCOUNT_ID }}
  #       OANDA_API_KEY: ${{ secrets.PROD_OANDA_API_KEY }}
  #       OANDA_ENV: live
