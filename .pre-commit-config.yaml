repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-added-large-files  # Prevent giant files from being committed
      - id: check-ast                # Check that files parse as valid Python
      - id: check-docstring-first    # Check for a common error of placing code before the docstring
      - id: check-json              # Check JSON files for parse errors
      - id: check-toml              # Check TOML files for parse errors
      - id: check-yaml              # Check YAML files for parse errors
      - id: debug-statements        # Check for debugger imports and py37+ breakpoint() calls
      - id: end-of-file-fixer       # Ensure files end with a newline and only one newline at the end
      - id: mixed-line-ending       # Replaces or checks mixed line endings
        args: [--fix=lf]            # Use LF line endings
      - id: trailing-whitespace     # Trims trailing whitespace
      - id: requirements-txt-fixer  # Sorts entries in requirements.txt

  # Black - Python code formatter
  - repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
      - id: black
        language_version: python3.9
        args: [--line-length=100, --target-version=py39]

  # Ruff - A fast Python linter, written in Rust
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.270
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi]
        args: [
          "--fix",
          "--exit-non-zero-on-fix",
          "--ignore=E203,E501,I001,I002",  # Ignore rules handled by Black and isort
          "--line-length=100",
          "--target-version=py39"
        ]

  # isort - Python import sorter
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: [--profile=black, --line-length=100]
        types: [python]

  # Mypy - Static type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.0.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-python-dateutil, types-pytz, types-PyYAML, pandas-stubs]
        args: [--strict, --ignore-missing-imports, --implicit-optional, --no-warn-no-return]
        exclude: ^tests/
        types: [python]

  # PyUpgrade - Automatically upgrades syntax for newer Python versions
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade
        args: [--py39-plus]

  # Autoflake - Removes unused imports and variables
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.0.0
    hooks:
      - id: autoflake
        args:
          [
            "--in-place",
            "--remove-all-unused-imports",
            "--remove-unused-variables",
            "--ignore-init-module-imports",
            "--expand-star-imports",
          ]

  # Check for merge conflicts
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-merge-conflict
        args: [--assume-in-merge]

  # Check for secrets in the code
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: >-
          (?x)(
            ^tests/|  # Exclude test files
            ^.github/|  # Exclude GitHub workflows
            ^.pre-commit-config.yaml$|  # Exclude this file
            ^pyproject.toml$  # Exclude project config
          )

  # Check for broken symlinks
  - repo: https://github.com/cookiecutter/cookiecutter
    rev: 2.1.1
    hooks:
      - id: check-symlinks

  # Check for files with execute permissions
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-executables-have-shebangs

  # Check for case conflicts in file names
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-case-conflict

  # Check for files with non-ASCII names
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-ast
        name: check-ast (python)
        types: [python]

  # Check for files with CRLF line endings
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-byte-order-marker

  # Check for files with UTF-8 BOM
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-byte-order-marker
        args: [--remove-if-present]

  # Check for files with shebangs but no execute bit
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-shebang-scripts-are-executable

  # Check for files with Windows line endings
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-merge-conflict
        args: [--assume-in-merge]

  # Check for files with Windows line endings
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: mixed-line-ending
        args: [--fix=lf]
